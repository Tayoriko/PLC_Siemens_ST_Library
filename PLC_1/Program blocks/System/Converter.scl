FUNCTION_BLOCK "Converter"
{ S7_Optimized_Access := 'FALSE' }
VERSION : 0.1
   VAR_INPUT 
      Signal : Real;
   END_VAR

   VAR_OUTPUT 
      Result : Real;
   END_VAR

   VAR 
      Lim_High { S7_SetPoint := 'True'} : Bool;
      Lim_Low { S7_SetPoint := 'True'} : Bool;
      Inverse { S7_SetPoint := 'True'} : Bool;
      Min_In { S7_SetPoint := 'True'} : Real;   // Минимальный входной сигнал
      Min_Out { S7_SetPoint := 'True'} : Real;   // Минимальный выходной сигнал
      Max_In { S7_SetPoint := 'True'} : Real;   // Максимальный входной сигнал
      Max_Out { S7_SetPoint := 'True'} : Real;   // Максимальный выходной сигнал
   END_VAR

   VAR_TEMP 
      Buffer : Real;
      Range_In : Real;
      Range_Out : Real;
      RR_Scale : Real;
   END_VAR


BEGIN
	//Диапазон входного сигнала
	IF #Min_In >= 0 THEN
	    #Range_In := #Max_In - #Min_In;
	ELSE
	    #Range_In := #Max_In + ABS(#Min_In);
	END_IF;
	
	//Диапазон выходного сигнала
	IF #Min_Out >= 0 AND #Max_Out >= 0 THEN
	    #Range_Out := #Max_Out + #Min_Out;
	END_IF;
	IF #Min_Out < 0 AND #Max_Out >= 0 THEN
	    #Range_Out := #Max_Out + ABS(#Min_Out);
	END_IF;
	IF #Min_Out < 0 AND #Max_Out < 0 THEN
	    #Range_Out := ABS(#Max_Out) + ABS(#Min_Out);
	END_IF;
	
	//Соотношение диапазонов
	#RR_Scale := #Range_In / #Range_Out;
	
	//Линеаризация
	#Buffer := #Signal / #RR_Scale;
	
	//Коррекция
	#Buffer := #Buffer + #Min_Out;
	
	//Инверсия
	IF #Inverse THEN
	    #Buffer := #Max_Out - #Buffer;
	END_IF;
	
	//Ограничение снизу
	IF #Buffer < #Min_Out THEN
	    #Buffer := #Min_Out;
	END_IF;
	
	//Ограничение сверху
	IF #Buffer > #Max_Out THEN
	    #Buffer := #Max_Out;
	END_IF;
	
	//Вывод значения
	#Result := #Buffer;
END_FUNCTION_BLOCK

